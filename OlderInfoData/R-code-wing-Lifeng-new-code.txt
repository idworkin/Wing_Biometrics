data <- read.table("d:\\wings\\cv2_15landmarks.txt" , header=TRUE)

x <- data.matrix(data[,-(1:6)])

y<-c(rep(0,92),rep(1,184))

#1. SVM features

library(e1071)

index <- 1:nrow(x)

test <- sample(index, trunc(length(index)/3))

obj <- tune(svm, x[-test,],factor(y[-test]), ranges = list(gamma = 10^(-2:1), cost = 2^(-1:4)), tunecontrol = tune.control(cross=10) )

model <- obj$best.model

pred <- predict(model, x[test,], decision.values = TRUE, probability = TRUE )

pred.value <- attr(pred,"decision.values")

cor(pred.value,y[test])

genotype <- factor( y[test] )

fit <- aov(pred.value ~ genotype)

summary(fit)

boxplot( pred.value ~ genotype )


obj2 <- tune(svm, x[-test,],factor(y[-test]), kernel="linear", ranges = list( cost = 2^(0:4)), tunecontrol = tune.control(cross=10) )

model2 <- obj2$best.model

pred2 <- predict(model2, x[test,], decision.values = TRUE, probability = TRUE )

pred.value2 <- attr(pred2,"decision.values")

cor(pred.value2,y[test])

summary( aov(pred.value2 ~ genotype) )


#2. PCA features

pcr <- prcomp(x,retx=TRUE)

pcr$sdev/sum(pcr$sdev)

features <- pcr$x

fit <- aov(features[,1] ~ factor(y))

summary(fit)

fit <- aov(features[,2] ~ factor(y))

summary(fit)
 
 
plot(features[,1:2])

points(features[1:92,1:2],pch="1")
points(features[93:276,1:2],pch="2")

par(mfrow=c(1,2))

boxplot( features[,1] ~ factor(y) )
boxplot( features[,2] ~ factor(y) )


par(mfrow=c(1,1))


#3. Polygon features.


mat <- matrix( x[1,], nrow=2)

plot(t(mat))

for( i  in 1:ncol(mat) )
{
points( t(mat[,i]), pch = paste(i) )
}

polygon1<-c(1,2,7)
polygon2<-c(2,6,12,7)
polygon3<-c(6,8,13,12)
polygon4<-c(8,9,10,14,13)
polygon5<-c(5,11,10,9,3)
polygon6<-c(10,11,15,14)
polygon7<-c(4,15,11,5)
polygon8<-c(3,9,8,6)

feature <- function( x , indx )
{

poly.f <- rep(0,nrow(x))

for(i in 1:nrow(x) )
{
mat <- matrix( x[i,], nrow=2)[,indx]

diameter <- max(   t ( -2* t(mat)%*%mat + apply(mat^2,2,sum) ) + apply(mat^2,2,sum) )


cycle.mat<- cbind( mat, mat[,1] )

area<-0

for(k in 1:ncol(mat) )
{
area <- area + det( cycle.mat[,c(k,k+1)] )
}

poly.f[i]<- area/diameter^2

}

return(poly.f)

}


feature1 <- cbind( feature(x,polygon1), feature(x,polygon2), feature(x,polygon3), feature(x,polygon4), feature(x,polygon5), feature(x,polygon6), feature(x,polygon7)   )



feature <- function( x , indx )
{

poly.f <- rep(0,nrow(x))

for(i in 1:nrow(x) )
{
mat <- matrix( x[i,], nrow=2)[,indx]

diameter <- max(   t ( -2* t(mat)%*%mat + apply(mat^2,2,sum) ) + apply(mat^2,2,sum) )


cycle.mat<- cbind( mat, mat[,1] )

area<-0

for(k in 1:ncol(mat) )
{
area <- area + det( cycle.mat[,c(k,k+1)] )
}

poly.f[i]<- area

}

return(poly.f)

}



feature2 <- cbind( feature(x,polygon1), feature(x,polygon2), feature(x,polygon3), feature(x,polygon4), feature(x,polygon5), feature(x,polygon6), feature(x,polygon7)   )

features<- cbind(feature1,feature2)

obj3 <- tune(svm, features[-test,],factor(y[-test]), ranges = list(gamma = 10^(-2:1), cost = 2^(-1:4)), tunecontrol = tune.control(cross=10) )

model3 <- obj3$best.model

pred <- predict(model3, features[test,], decision.values = TRUE, probability = TRUE )

pred.value <- attr(pred,"decision.values")

cor(pred.value,y[test])

genotype <- factor( y[test] )

fit <- aov(pred.value ~ genotype)

summary(fit)

boxplot( pred.value ~ genotype )



for( k in 1:8)
{

fit <- aov(features[,k] ~ factor(y) )

print(summary(fit))

}


par(mfrow=c(2,4))

for( k in 1:8)
{

boxplot(features[,k] ~ factor(y) )

}


par(mfrow=c(1,1))

#4 SVM-RFE

source("d:\\wings\\SVM-RFE.R")

all.feat <- cbind( features )

re <-  svmRFE( cbind(y,all.feat) , k=1 )

cv<-rep(0,length(re))

for( k in 1:length(re) )
{
a <- svm( all.feat[,re[1:k] ],factor(y), method = "C-classification", kernel = "linear", cost=10, cross=10)

cv[k] = a$tot.accuracy

}

plot(1:length(re),cv)

re


#5 Try

library("EBImage")

sam1 = array(,c(1360, 1024,22))

for(i in 1:22)
{
   sam1[,,i] = readImage(paste('d:\\wings\\Sam_10514_Sam_', i , " rep 1.tif", sep="") )
}


sam2 = array(,c(1360, 1024,21))

for(i in 1:21)
{
   sam2[,,i] = readImage(paste('d:\\wings\\Sam_10514_Sam_', i , " rep 2.tif", sep="") )
}



samw1 = array(,c(1360, 1024,23))

for(i in 1:9)
{
   samw1[,,i] = readImage(paste('d:\\wings\\Samw_Sam_Sam_M_rep1_0', i , ".tif", sep="") )
}
for(i in 10:23)
{
   samw1[,,i] = readImage(paste('d:\\wings\\Samw_Sam_Sam_M_rep1_', i , ".tif", sep="") )
}


samw2 = array(,c(1360, 1024,22))

for(i in 1:9)
{
   samw2[,,i] = readImage(paste('d:\\wings\\Samw_Sam_Sam_M_rep1_0', i , ".tif", sep="") )
}
for(i in 10:22)
{
   samw2[,,i] = readImage(paste('d:\\wings\\Samw_Sam_Sam_M_rep1_', i , ".tif", sep="") )
}

#setwd("D:\\wings")
#a<-list.files()
#a

#summary( manova(data.matrix(x) ~ as.factor(y)) )

